t.test(males, females, alternative = c("greater"), paired = F, var.equal = T)
SIGN.test(astrodat$after, astrodat$after, alternative = "two.sided")
# sign test,
SignTest(astrodat$after, astrodat$before, alternative = "two.sided")
SIGN.test(astrodat$after, astrodat$before, alternative = "two.sided")
SIGN.test(astrodat$after, astrodat$before, alternative = "two.sided")
SignTest
# sign test,
SignTest(astrodat$after, astrodat$before, alternative = "two.sided")
binom.testa(strodat$after, astrodat$before)
binom.test(astrodat$after, astrodat$before)
sign.test <- function(x=0,y=NULL,alternative="two.sided"){
n<-sum((x-y)!=0)
T<-sum(x<y)
if (alternative=="less") {
p.value<-pbinom(T,n,0.5)}
if (alternative=="greater"){
p.value<- 1-pbinom(T-1,n,0.5)}
if (alternative=="two.sided"){
p.value<-2*min(1-pbinom(T-1,n,0.5),pbinom(T,n,0.5))
}
list(n=n,alternative=alternative,T=T,p.value=p.value)
}
sign.test(astrodat$after, astrodat$before)
sign.test <- function(x=0,y=NULL,alternative="two.sided") {
browser()
n <- sum((x-y)!=0)
T <- sum(x<y)
if (alternative=="less") {
p.value<-pbinom(T,n,0.5)
}
if (alternative=="greater") {
p.value<- 1-pbinom(T-1,n,0.5)
}
if (alternative=="two.sided") {
p.value<-2*min(1-pbinom(T-1,n,0.5),pbinom(T,n,0.5))
}
list(n=n,alternative=alternative,T=T,p.value=p.value)
}
sign.test(astrodat$after, astrodat$before)
n <- sum((x-y)!=0)
T <- sum(x<y)
if (alternative=="less") {
p.value<-pbinom(T,n,0.5)
}
if (alternative=="greater") {
p.value<- 1-pbinom(T-1,n,0.5)
}
if (alternative=="two.sided") {
p.value<-2*min(1-pbinom(T-1,n,0.5),pbinom(T,n,0.5))
}
list(n=n,alternative=alternative,T=T,p.value=p.value)
mn <- size(males)
mn <- length(males)
mn
fn <- length(females)
fn
# calculate s-pool: Slide 238
sPool2 <- ((n-1)*sx^2 + (m-1)*sy^2)/(n+m-2)
x <- mean(females)
n <- length(females)
sx <- sd(females)
y <- mean(males)
m <- length(males)
sy <- sd(males)
# calculate s-pool: Slide 238
sPool2 <- ((n-1)*sx^2 + (m-1)*sy^2)/(n+m-2)
sPool2
x - y
t <- (x - y)/(sPool2*sqrt(1/n + 1/m))
t
qt(0.975, n+m-2)
T <- (x - y)/(sPool2*sqrt(1/n + 1/m))
T
qt(0.25, n+m-2)
qt(1-a/2, n+m-2)
1-a/2
a/2
# H0: T ∼ t(df=n+m−2)
# significance level
a <- 0.5
1-a/2
# H0: T ∼ t(df=n+m−2)
# significance level
a <- 0.05
1-a/2
qt(1-a/2, n+m-2)
-qt(1-a/2, n+m-2)
qt(1-a/2, n+m-2)
T
T <- (y - x)/(sPool2*sqrt(1/n + 1/m))
T
T <- (x - y)/(sPool2*sqrt(1/n + 1/m))
T
# H0: T ∼ t(df=n+m−2)
# significance level
a <- 0.05
-qt(1-a/2, n+m-2)
x
# c)
males <- c(120, 107, 110, 116, 114, 111, 113, 117, 114, 112)
females <- c(110, 111, 107, 108, 110, 105, 107, 106, 111, 111)
qqPlot(males)
qqPlot(females)
x <- mean(females)
x
y <- mean(males)
y
# c)
males <- c(120, 107, 110, 116, 114, 111, 113, 117, 114, 112)
females <- c(110, 111, 107, 108, 110, 105, 107, 106, 111, 111)
x <- mean(males)
n <- length(males)
sx <- sd(males)
y <- mean(females)
m <- length(females)
sy <- sd(females)
# c)
males <- c(120, 107, 110, 116, 114, 111, 113, 117, 114, 112)
females <- c(110, 111, 107, 108, 110, 105, 107, 106, 111, 111)
x <- mean(males)
n <- length(males)
sx <- sd(males)
y <- mean(females)
m <- length(females)
sy <- sd(females)
sx^2
# c)
males <- c(120, 107, 110, 116, 114, 111, 113, 117, 114, 112)
females <- c(110, 111, 107, 108, 110, 105, 107, 106, 111, 111)
qqPlot(males)
qqPlot(females)
x <- mean(males)
n <- length(males)
sx2 <- sd(males)^2
y <- mean(females)
m <- length(females)
sy2 <- sd(females)^2
# calculate s-pool: Slide 238
sPool <- sqrt(((n-1)*sx2 + (m-1)*sy2)/(n+m-2))
T <- (x - y)/(sPool*sqrt(1/n + 1/m))
T
# H0: T ∼ t(df=n+m−2)
# significance level
a <- 0.05
-qt(1-a/2, n+m-2)
qt(1-a/2, n+m-2)
# rejection interval:
#tn+m−2,1−α/2
t10_0_975 <- qt(1-a/2, n+m-2)
t10_0_975
# rejection interval:
#tn+m−2,1−α/2
t10_0_975 <- qt(1-a/2, n+m-2)
# -inf, -t10_0_975
-t10_0_975
# t10_0_975, +inf
t10_0_975
T
T
?pnorm
?ppois
?punif
size(males)
males
n <- length(males)
n
(D <- mean.diff(1:n))
mean.diff <- function(group1) mean(xy.all[group1]) - mean(xy.all[-group1])
(D <- mean.diff(1:n))
# a)
set.seed(11)
xy.all <- c(males, females)
n <- length(males)
m <- length(females)
mean.diff <- function(group1) mean(xy.all[group1]) - mean(xy.all[-group1])
(D <- mean.diff(1:n))
D.sample <- replicate(N,mean.diff(sample.int(n+m, size = n)))
N <- 1000
(D <- mean.diff(1:n))
D.sample <- replicate(N,mean.diff(sample.int(n+m, size = n)))
quantile(D.sample, c(0.025, 0.975))
sum(abs(D.sample) >= abs(D))/N
(sum(abs(D.sample) >= abs(D)) + 1)/(N + 1)
# b)
library(perm)
?permTS
permTS(males, females, alternative = "greater", paired = FALSE, conf.level = 0.95, method = "exact.mc")
D.sample <- replicate(N, mean.diff(sample.int(n+m, size = n)))
D.sample
quantile(D.sample, c(0.025, 0.975))
sample.int(n+m, size = n)
n+m
abs(D)
mean.diff <- function(group1) mean(xy.all[group1]) - mean(xy.all[-group1])
# original
(D <- mean.diff(1:n))
# permutated
N <- 1000
D.sample <- replicate(N, mean.diff(sample.int(n+m, size = n)))
quantile(D.sample, c(0.025, 0.975))
sum(abs(D.sample) >= abs(D))/N
(sum(abs(D.sample) >= abs(D)) + 1)/(N + 1)
# b)
library(perm)
permTS(males, females, alternative = "greater", paired = FALSE, conf.level = 0.95, method = "exact.mc")
mean.diff <- function(group1) mean(xy.all[group1]) - mean(xy.all[-group1])
# original
(D <- mean.diff(1:n))
# permutated
N <- 1000
D.sample <- replicate(N, mean.diff(sample.int(n+m, size = n)))
quantile(D.sample, c(0.025, 0.975))
sum(abs(D.sample) >= abs(D))/N
(sum(abs(D.sample) >= abs(D)) + 1)/(N + 1)
# original
(D <- mean.diff(1:n))
# permutated
N <- 1000
D.sample <- replicate(N, mean.diff(sample.int(n+m, size = n)))
quantile(D.sample, c(0.025, 0.975))
sum(abs(D.sample) >= abs(D))/N
(sum(abs(D.sample) >= abs(D)) + 1)/(N + 1)
# b)
library(perm)
permTS(males, females, alternative = "greater", paired = FALSE, conf.level = 0.95, method = "exact.mc")
# c)
t.test(males, females)
# c)
t.test(males, females, alternative = "greater")
counts <- read.table("counts.txt", header = F)
counts <- read.table("counts.txt", header = F)
counts
View(counts)
View(counts)
# a)
hist(counts)
# a)
hist(counts)
counts
# a)
hist(counts)
?hist
# a)
plot(counts)
install.packages("statsDK")
# a)
poisson.test(counts, r=5)
type(counts)
class(counts)
as.vector(t(counts))
countsL <- read.table("counts.txt", header = F)
counts <- as.vector(t(countsL))
# a)
poisson.test(counts, r=5)
plot(counts)
hist(counts)
library(MASS)
histPlot <- function(fdata, desc) {
#  def.par=par(no.readonly = T)
#  layout.show(layout(matrix(c(1,1,2,3), nrow=2, ncol=2, byrow = TRUE)))
dmin <- floor(min(fdata))
dmax <- ceiling(max(fdata))
size <- length(fdata)
mu <- mean(fdata)
sd <- sd(fdata)
sem <- sd(fdata)/sqrt(size)
maxD <- dnorm( mu, mean = mu, sd = sd)
hist(fdata, freq = F, breaks = 20, xlab = desc, xlim = c(dmin, dmax), main = paste("Histogram of ", desc))
abline(v = mu, lwd = 2, col = "blue")
lines(c(mu - sem, mu + sem), c(maxD,maxD), lwd = 2, col = "red")
text(mu + sem, maxD, "SEM", pos = 2, offset = 2)
lines(c(mu - sd, mu + sd), c(maxD/2,maxD/2), lwd = 2, col = "orange")
text(mu + sd, maxD/2, "SD", pos = 2, offset = 2)
xseq=seq(dmin, dmax, (dmax-dmin)/100)
lines(xseq, dnorm(xseq, mean = mu, sd = sd), lwd = 2, col = "steelblue")
unif <- dunif(xseq, min = dmin, max = dmax)
lines(xseq, unif, lwd = 2, col = "green")
text(dmax, unif[1], "unif", pos = 2, offset = 2)
#  lines(xseq, dpois(xseq, lambda = round(mean(fdata))), lwd = 2, col = "red")
}
compPois <- function(fdata, desc) {
qqPlot(fdata, dist = "pois", main = paste(desc, " vs Poisson distribution"), xlab = "Theor. quantiles (poisson-distribution)", ylab = "Empirical quantiles", lambda = mean(fdata), envelope=.975)
}
compPois(counts, "palindromes")
library("car")
compPois(counts, "palindromes")
# a)
set.seed(11)
xy.all <- c(males, females)
n <- length(males)
m <- length(females)
mean.diff <- function(group1) mean(xy.all[group1]) - mean(xy.all[-group1])
xy.all <- c(males, females)
n
n <- length(males)
m <- length(females)
mean.diff <- function(group1) mean(xy.all[group1]) - mean(xy.all[-group1])
mean.diff <- function(group1) mean(xy.all[group1]) - mean(xy.all[-group1])
# original
(D <- mean.diff(1:n))
D
# permutated
N <- 1000
D.sample <- replicate(N, mean.diff(sample.int(n+m, size = n)))
D.sample
quantile(D.sample, c(0.025, 0.975))
sum(abs(D.sample) >= abs(D))/N
(sum(abs(D.sample) >= abs(D)) + 1)/(N + 1)
# b)
library(perm)
permTS(males, females, alternative = "greater", paired = FALSE, conf.level = 0.95, method = "exact.mc")
# b)
library(perm)
permTS(males, females, alternative = "greater", paired = FALSE, conf.level = 0.95, method = "exact.mc")
mean.diff(sample.int(n+m, size = n))
mean.diff(sample.int(n+m, size = n))
mean.diff(sample.int(n+m, size = n))
mean.diff(sample.int(n+m, size = n))
mean.diff(sample.int(n+m, size = n))
mean.diff(sample.int(n+m, size = n))
mean.diff(sample.int(n+m, size = n))
mean.diff(sample.int(n+m, size = n))
mean.diff(sample.int(n+m, size = n))
mean.diff(sample.int(n+m, size = n))
s = sample.int(n+m, size = n)
mean.diff(s)
mean.diff(s)
mean.diff(s)
mean.diff(s)
s
D.sample
mean.diff(sample.int(n+m, size = n))
mean.diff(sample.int(n+m, size = n))
mean.diff(sample.int(n+m, size = n))
mean.diff(sample.int(n+m, size = n))
mean.diff(sample.int(n+m, size = n))
mean.diff(sample.int(n+m, size = n))
mean.diff(sample.int(n+m, size = n))
mean.diff(sample.int(n+m, size = n))
mean.diff(sample.int(n+m, size = n))
mean.diff(sample.int(n+m, size = n))
mean.diff(sample.int(n+m, size = n))
mean.diff(sample.int(n+m, size = n))
mean.diff(sample.int(n+m, size = n))
mean.diff(sample.int(n+m, size = n))
mean.diff(sample.int(n+m, size = n))
?replicate
D.sample <- replicate(N, mean.diff(sample.int(n+m, size = n)))
quantile(D.sample, c(0.025, 0.975))
sum(abs(D.sample) >= abs(D))/N
(sum(abs(D.sample) >= abs(D)) + 1)/(N + 1)
D.sample <- replicate(N, mean.diff(sample.int(n+m, size = n)))
quantile(D.sample, c(0.025, 0.975))
sum(abs(D.sample) >= abs(D))/N
(sum(abs(D.sample) >= abs(D)) + 1)/(N + 1)
D.sample <- replicate(N, mean.diff(sample.int(n+m, size = n)))
quantile(D.sample, c(0.025, 0.975))
sum(abs(D.sample) >= abs(D))/N
(sum(abs(D.sample) >= abs(D)) + 1)/(N + 1)
# b)
library(perm)
D.sample <- replicate(N, mean.diff(sample.int(n+m, size = n)))
quantile(D.sample, c(0.025, 0.975))
sum(abs(D.sample) >= abs(D))/N
(sum(abs(D.sample) >= abs(D)) + 1)/(N + 1)
D.sample <- replicate(N, mean.diff(sample.int(n+m, size = n)))
quantile(D.sample, c(0.025, 0.975))
sum(abs(D.sample) >= abs(D))/N
(sum(abs(D.sample) >= abs(D)) + 1)/(N + 1)
permTS(males, females, alternative = "greater", paired = FALSE, conf.level = 0.95, method = "exact.mc")
abs(D.sample)
D.sample
abs(D.sample)
length(abs(D.sample))
abs(D.sample) >= abs(D)
# original
(D <- mean.diff(1:n))
sum(abs(D.sample) >= abs(D))/N
(sum(abs(D.sample) >= abs(D)) + 1)/(N + 1)
D.sample <- replicate(N, mean.diff(sample.int(n+m, size = n)))
quantile(D.sample, c(0.025, 0.975))
sum(abs(D.sample) >= abs(D))/N
(sum(abs(D.sample) >= abs(D)) + 1)/(N + 1)
(sum(D.sample >= D) + 1)/(N + 1)
(sum(D.sample >= D) + 1)/(N + 1)
D.sample <- replicate(N, mean.diff(sample.int(n+m, size = n)))
quantile(D.sample, c(0.025, 0.975))
(sum(D.sample >= D) + 1)/(N + 1)
(sum(abs(D.sample) >= abs(D)) + 1)/(N + 1)
permTS(males, females, alternative = "greater", paired = FALSE, conf.level = 0.95, method = "exact.mc")
# original
(D <- mean.diff(1:n))
quantile(D.sample, c(0.025, 0.975))
D <- mean.diff(1:n)
mean.diff <- function(group1) mean(xy.all[group1]) - mean(xy.all[-group1])
# original
(D <- mean.diff(1:n))
D.sample <- replicate(N, mean.diff(sample.int(n+m, size = n)))
D.sample
mean(males) - mean(females)
# original
(D <- mean.diff(1:n))
mean(males) - mean(females)
1:n
# c)
t.test(males, females, alternative = "greater")
countsL <- read.table("counts.txt", header = F)
counts <- as.vector(t(countsL))
counts
# a)
poisson.test(counts, r=5)
hist(counts)
compPois(counts, "palindromes")
?poisson.test
# a)
?poisson.test(counts, T=4000, r=5)
# a)
poisson.test(counts, T=4000, r=5)
# a)
poisson.test(counts, T=c(4000), r=5)
# a)
poisson.test(counts, T=c(1), r=5)
# a)
rep(length(counts),4000)
length(counts)
counts <- as.vector(t(countsL))
counts
?rep
# a)
rep(4000, length(counts))
# a)
T <- rep(4000, length(counts))
# a)
t <- rep(4000, length(counts))
poisson.test(counts, T=t, r=5)
t
counts
?poisson.test
?
poisson.test(counts, T=40, r=5)
?
poisson.test(counts, T=40, r=5)
poisson.test(counts, T=40, r=5)
poisson.test(counts, T=40)
compPois(counts, "palindromes")
rpois(40,5)
t.test(counts, mu=mean(rpois(40,5)))
t.test(counts, mu=5)
t.test(counts, mu=5)
t.test(counts, mu=5)
t.test(counts[1], mu=5)
each(i -> t.test(mcounts[i], mu=5))(1:40)
each( function(i) {
t.test(mcounts[i], mu=5)
}
)(1:40)
?each
?each
install.packages("plyr")
library("plyr", lib.loc="/Library/Frameworks/R.framework/Versions/3.5/Resources/library")
each( function(i) {
t.test(mcounts[i], mu=5)
}
)(1:40)
each( function(i) {
t.test(counts[i], mu=5)
}
)(1:40)
each( function(i) {
t.test(counts[i], mu=5)
}
)(1:40)
t.test(counts[1], mu=5)
?t.test
rep(40,counts[1])
rep(counts[1],40)
t.test(rep(counts[1],40), mu=5)
D.sample <- replicate(N, mean.diff(sample.int(n+m, size = n)))
quantile(D.sample, c(0.025, 0.975))
sum(abs(D.sample) >= abs(D))/N
(sum(abs(D.sample) >= abs(D)) + 1)/(N + 1)
(sum(D.sample >= D) + 1)/(N + 1)
permTS(males, females, alternative = "greater", paired = FALSE, conf.level = 0.95, method = "exact.mc")
permTS(males, females, alternative = "greater", paired = FALSE, conf.level = 0.95, method = "exact.mc")
# b)
library(perm)
permTS(males, females, alternative = "greater", paired = FALSE, conf.level = 0.95, method = "exact.mc")
permTS(males, females, alternative = "greater", paired = FALSE, conf.level = 0.95, method = "exact.mc")
# b)
library(perm)
permTS(males, females, alternative = "greater", paired = FALSE, conf.level = 0.95, method = "exact.mc")
# b)
library(perm)
permTS(males, females, alternative = "greater", paired = FALSE, conf.level = 0.95, method = "exact.mc")
?permTS
# c)
t.test(males, females, alternative = "greater")
# a)
t <- rep(4000, length(counts))
plot(counts)
hist(counts)
t.test(counts, mu=5)
for (i in 1:40) {
t.test(counts[i], mu=5)
}
mean <- mean(counts)
mean
ppois(q = counts-1, lambda = lambda, lower.tail = F)
lambda <- mean(counts)
ppois(q = counts-1, lambda = lambda, lower.tail = F)
?p.adjust
